/*Pointer is a variable that stores the memory address of another *variable.
*/

//1. 

#include<stdio.h>
int main(){
    int a =20;
    int *b = &a;
    printf("number: %d\n",a);
    printf("pointer: %d\n",b);
    // *b = a ....
    printf("%d\n",*b-1);
    
}


//2.

#include<stdio.h>
int main(){
    int a,*b,c,*d;
    a = 10;
    b = &a;    
    c = 20;
    d = &c;
    // between two pointers , only - valid not +,* or /.
}


//3.
#include <stdio.h>
int main(){
    int arr[4] = {43,23,10,32},*d =&arr[0];
    printf("%d\n",*d+1); // 43 + 1
    printf("%d\n",*(d+1)); // 23 
    return 0;
}

//3.
#include <stdio.h>
int main(){
    int arr[4] = {43,23,10,32},*d =&arr[0];
    int *c = d+1;
    *c = 5;
    printf("%d",arr[1]); // 23 is converted to 5
}



//4.swap integers by swapping pointers

#include <stdio.h>

void swapInt(int *x,int *y){
    int temp = *x;
    x* = *y;*y = temp;
}

int main(){
    int a=10;
    int b = 43;
    swapInt(&a,&b);
    printf("a: %d",a);
    printf("b: %d",b);
    return 0;
}



/*5.scanf requires the address of a variable not the value of the variable.
* scanf("%s",string) : string is pointer to the first element of the character 
* if p is a pointer ,we can write : scanf("%d",p) == scanf("%d",&*p)

#include<stdio.h>
int main(){
    int data[4],*p = &data[0],i;
    lenArray = sizeof(array)/sizeof(array[0]);
    for(i=0;i<lenArray;i++,p++)
        scanf("%d",p);
    for(i=0;i<lenArray;i+=3)
        scanf("%d",arr[i]);
    return 0;


/*6.For 1D array: int*p = arr[0]; means the first element of the array
*For 2D array: int *p = *arr;
*/

// *(...+..*...+) :*(p+i*numberOfColumns+j);



#include<stdio.h>
int main(){
    int array[3][4] = {{4,5,2,6},{65,3,12,2},{90,65,89,22}};
    int *p = *array;
    int i,j;
    int row = sizeof(array)/sizeof(array[0]);
    int col = sizeof(array[0])/sizeof(array[0][0]);
    for(i=0;i<row;i++){
        for(j=0;j<col;j++)
            printf("%d ",*(p+i*col+j));
        printf("\n");
    }
    return 0;
}


//7
#include<stdio.h>
int main(){
    char answer[100] = "YES";
    printf("%d",strlen(answer));
}





